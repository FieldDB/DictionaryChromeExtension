<html>
  <script>
    // API URLs.
    var DICT_API_URL = 'http://www.onelook.com/?other=web1913&w=%query%&xml=1'

    // Helpers to store and access objects in local storage.
    Storage.prototype.setObject = function(key, value) {
      this.setItem(key, JSON.stringify(value));
    }
    Storage.prototype.getObject = function(key) {
      var value = this.getItem(key);
      if (value == null) {
        return null;
      } else {
        return JSON.parse(value);
      }
    }

    // Helper to get extension version.
    chrome.extension.getVersion = function() { 
      if (!chrome.extension.version_) { 
        var xhr = new XMLHttpRequest(); 
        xhr.open("GET", chrome.extension.getURL('manifest.json'), false); 
        xhr.onreadystatechange = function() { 
          if (this.readyState == 4) { 
            var manifest = JSON.parse(this.responseText); 
            chrome.extension.version_ = manifest.version; 
          } 
        }; 
        xhr.send(); 
      } 
      return chrome.extension.version_; 
    }; 

    // Helper to send an AJAX request.
    function sendAjaxRequest(url, callback) {
      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function() {
        if (xhr.readyState == 4) {
          callback(xhr.responseText);
        }
      }
      xhr.open('GET', url, true);
      xhr.send();
    }
        
    // Server procedure for content script.
    // Receives a request containing two parameters:
    //   method:
    //     "lookup" for a Google Dictionary lookup
    //     "retrieve" to retrieve an object from local storage.
    //     "store" to store an object in the local storage.
    //   arg: the term to look up or the name of the object to retrieve/store.
    //   arg2: the object to store. Used only with "store".
    chrome.extension.onRequest.addListener(function(request, sender, callback) {
      if (request.method == 'retrieve') {
        // Return an object from local storage.
        callback(localStorage.getObject(request.arg));
      } else if (request.method == 'store') {
        // Return an object from local storage.
        localStorage.setObject(request.arg, request.arg2);
        callback('');
      } else if (request.method == 'lookup') {
        // Lookup a term from the dictionary using the Ajax API.
        sendAjaxRequest(DICT_API_URL.replace('%query%', request.arg), callback);
      } else {
        // Invalid request method. Ignore it.
        callback('');
      }
    });
    
    // If new version is loaded, show the options page.
    saved_version = localStorage.getObject('version');
    if (saved_version) {
      saved_version = saved_version.split('.')[0] + '.' + saved_version.split('.')[1];
      current_version = chrome.extension.getVersion();
      current_version = current_version.split('.')[0] + '.' + current_version.split('.')[1];
    }
    if (saved_version != current_version) {
      localStorage.setObject('version', current_version);
      chrome.tabs.create({url: 'options.htm'});
    }
  </script>
</html>